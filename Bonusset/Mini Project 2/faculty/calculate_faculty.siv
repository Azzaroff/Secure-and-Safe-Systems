*****************************************************************************
                       Semantic Analysis of SPARK Text
                              Examiner GPL 2011
             Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.
*****************************************************************************


CREATED 01-FEB-2012, 12:55:50  SIMPLIFIED 01-FEB-2012, 12:55:50

SPARK Simplifier GPL 2011
Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.

function Faculty.calculate_faculty




For path(s) from start to default assertion of line 8:

function_calculate_faculty_1.
*** true .          /* all conclusions proved */


For path(s) from default assertion of line 8 to default assertion of line 8:

function_calculate_faculty_2.
*** true .          /* all conclusions proved */


For path(s) from default assertion of line 8 to run-time check associated with 
          statement of line 10:

function_calculate_faculty_3.
H1:    n >= 1 .
H2:    n <= 12 .
H3:    i >= integer__first .
H4:    i <= integer__last .
H5:    i < n .
H6:    integer__size >= 0 .
H7:    integer__first <= integer__last .
H8:    integer__base__first <= integer__base__last .
H9:    integer__base__first <= integer__first .
H10:   integer__base__last >= integer__last .
H11:   positive__size >= 0 .
H12:   positive__base__first <= positive__base__last .
H13:   positive__base__last >= positive__last .
H14:   faculty_positive__size >= 0 .
H15:   faculty_positive__base__first <= faculty_positive__base__last .
H16:   1 <= positive__last .
H17:   positive__base__first <= 1 .
H18:   faculty_positive__base__first <= 1 .
H19:   faculty_positive__base__last >= 12 .
       ->
C1:    i + 1 <= integer__last .


For path(s) from default assertion of line 8 to run-time check associated with 
          statement of line 12:

function_calculate_faculty_4.
H1:    n >= 1 .
H2:    n <= 12 .
H3:    i >= integer__first .
H4:    i < n .
H5:    i + 1 <= integer__last .
H6:    fac >= 1 .
H7:    fac <= positive__last .
H8:    integer__size >= 0 .
H9:    integer__first <= integer__last .
H10:   integer__base__first <= integer__base__last .
H11:   integer__base__first <= integer__first .
H12:   integer__base__last >= integer__last .
H13:   positive__size >= 0 .
H14:   positive__base__first <= positive__base__last .
H15:   positive__base__last >= positive__last .
H16:   faculty_positive__size >= 0 .
H17:   faculty_positive__base__first <= faculty_positive__base__last .
H18:   1 <= positive__last .
H19:   positive__base__first <= 1 .
H20:   faculty_positive__base__first <= 1 .
H21:   faculty_positive__base__last >= 12 .
       ->
C1:    fac * (i + 1) >= 1 .
C2:    fac * (i + 1) <= positive__last .


For path(s) from default assertion of line 8 to assertion of line 15:

function_calculate_faculty_5.
H1:    n >= 1 .
H2:    n <= 12 .
H3:    i >= integer__first .
H4:    i <= integer__last .
H5:    n <= i .
H6:    integer__size >= 0 .
H7:    integer__first <= integer__last .
H8:    integer__base__first <= integer__base__last .
H9:    integer__base__first <= integer__first .
H10:   integer__base__last >= integer__last .
H11:   positive__size >= 0 .
H12:   positive__base__first <= positive__base__last .
H13:   positive__base__last >= positive__last .
H14:   faculty_positive__size >= 0 .
H15:   faculty_positive__base__first <= faculty_positive__base__last .
H16:   1 <= positive__last .
H17:   positive__base__first <= 1 .
H18:   faculty_positive__base__first <= 1 .
H19:   faculty_positive__base__last >= 12 .
       ->
C1:    fac = element(fac_arr, [n]) .
C2:    fac <= positive__last .
C3:    fac >= 1 .


For path(s) from assertion of line 15 to finish:

function_calculate_faculty_6.
*** true .          /* all conclusions proved */


