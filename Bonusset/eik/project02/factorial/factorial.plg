*****************************************************************************
SPADE Transcript of Interactive Proof Session

SPARK Proof Checker GPL 2011
Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.

*****************************************************************************

DATE : 15-FEB-2012  TIME : 17:55:10


STEP 1
Command: newvc
Now attempting proof of VC: function_fac_1
H1:  n >= constraint_positive__first
H2:  n <= constraint_positive__last
H3:  positive__first = 1
H4:  positive__last = 2147483647
H5:  integer__base__first = - 2147483648
H6:  integer__base__last = 2147483647
H7:  constraint_positive__first = 1
H8:  constraint_positive__last = 12
H9:  n >= constraint_positive__first
H10:  n <= constraint_positive__last
-->
  C1:  true
  C2:  true
  C3:  1 = test(1)
  C4:  n >= constraint_positive__first
  C5:  n <= constraint_positive__last
  C6:  n >= constraint_positive__first
  C7:  n <= constraint_positive__last
  C8:  positive__first = 1
  C9:  positive__last = 2147483647
  C10:  integer__base__first = - 2147483648
  C11:  integer__base__last = 2147483647
  C12:  constraint_positive__first = 1
  C13:  constraint_positive__last = 12


STEP 2
Command: done
*** Proved C1: true
*** Proved C2: true
*** Proved C4: n >= constraint_positive__first
*** Proved C5: n <= constraint_positive__last
*** Proved C6: n >= constraint_positive__first
*** Proved C7: n <= constraint_positive__last
*** Proved C8: positive__first = 1
*** Proved C9: positive__last = 2147483647
*** Proved C10: integer__base__first = - 2147483648
*** Proved C11: integer__base__last = 2147483647
*** Proved C12: constraint_positive__first = 1
*** Proved C13: constraint_positive__last = 12

STEP 3
Command: consult
Consulted rulefile: d:/personal/organisation/dropbox/my dropbox/safe and secure software/bonus/umsetzung/project02/factorial/fac.rul
No errors trapped in reading this rulefile.

STEP 4
Command: infer
Successful inference with rule: fac(2)
  (unconstrained rule: no subgoals)
Therefore 1 = test(1)
*** New H11: 1 = test(1)
*** Proved C3: 1 = test(1)
*** Proved all conclusions

*** PROVED VC function_fac_1

The only rule used in proving the above VC was:
          fac.rul::fac(2)





STEP 1
Command: newvc
Now attempting proof of VC: function_fac_2
H1:  i = 1
H2:  result = 1
H3:  result = test(i)
H4:  n >= constraint_positive__first
H5:  n <= constraint_positive__last
H6:  n >= constraint_positive__first
H7:  n <= constraint_positive__last
H8:  positive__first = 1
H9:  positive__last = 2147483647
H10:  integer__base__first = - 2147483648
H11:  integer__base__last = 2147483647
H12:  constraint_positive__first = 1
H13:  constraint_positive__last = 12
H14:  i >= constraint_positive__first
H15:  i <= constraint_positive__last
H16:  not i >= n
H17:  i >= constraint_positive__first
H18:  i <= constraint_positive__last
-->
  C1:  i + 1 >= constraint_positive__first
  C2:  i + 1 <= constraint_positive__last


STEP 2
Command: done
*** Proved C1: i + 1 >= constraint_positive__first
*** Proved C2: i + 1 <= constraint_positive__last
*** Proved all conclusions

*** PROVED VC function_fac_2

The above proof did not make use of the proof rules database





STEP 1
Command: newvc
Now attempting proof of VC: function_fac_3
H1:  i >= 1
H2:  i <= n
H3:  result = test(i)
H4:  n >= constraint_positive__first
H5:  n <= constraint_positive__last
H6:  n >= constraint_positive__first
H7:  n <= constraint_positive__last
H8:  positive__first = 1
H9:  positive__last = 2147483647
H10:  integer__base__first = - 2147483648
H11:  integer__base__last = 2147483647
H12:  constraint_positive__first = 1
H13:  constraint_positive__last = 12
H14:  i >= constraint_positive__first
H15:  i <= constraint_positive__last
H16:  not i >= n
H17:  i >= constraint_positive__first
H18:  i <= constraint_positive__last
-->
  C1:  i + 1 >= constraint_positive__first
  C2:  i + 1 <= constraint_positive__last


STEP 2
Command: done
*** Proved C1: i + 1 >= constraint_positive__first

STEP 3
Command: consult
Consulted rulefile: d:/personal/organisation/dropbox/my dropbox/safe and secure software/bonus/umsetzung/project02/factorial/fac.rul
No errors trapped in reading this rulefile.

STEP 4
Command: infer
Successful inference with rule: fac(1)
  Proved subgoal: i < n and n <= constraint_positive__last
Therefore i + 1 <= constraint_positive__last
*** New H19: i + 1 <= constraint_positive__last
*** Proved C2: i + 1 <= constraint_positive__last
*** Proved all conclusions

*** PROVED VC function_fac_3

The only rule used in proving the above VC was:
          fac.rul::fac(1)





STEP 1
Command: newvc
Now attempting proof of VC: function_fac_4
H1:  i = 1
H2:  result = 1
H3:  result = test(i)
H4:  n >= constraint_positive__first
H5:  n <= constraint_positive__last
H6:  n >= constraint_positive__first
H7:  n <= constraint_positive__last
H8:  positive__first = 1
H9:  positive__last = 2147483647
H10:  integer__base__first = - 2147483648
H11:  integer__base__last = 2147483647
H12:  constraint_positive__first = 1
H13:  constraint_positive__last = 12
H14:  i >= constraint_positive__first
H15:  i <= constraint_positive__last
H16:  not i >= n
H17:  i >= constraint_positive__first
H18:  i <= constraint_positive__last
H19:  i + 1 >= constraint_positive__first
H20:  i + 1 <= constraint_positive__last
-->
  C1:  i >= 0
  C2:  i + 1 <= n
  C3:  result = test(i)
  C4:  n >= constraint_positive__first
  C5:  n <= constraint_positive__last
  C6:  n >= constraint_positive__first
  C7:  n <= constraint_positive__last
  C8:  positive__first = 1
  C9:  positive__last = 2147483647
  C10:  integer__base__first = - 2147483648
  C11:  integer__base__last = 2147483647
  C12:  constraint_positive__first = 1
  C13:  constraint_positive__last = 12


STEP 2
Command: done
*** Proved C1: i >= 0
*** Proved C3: result = test(i)
*** Proved C4: n >= constraint_positive__first
*** Proved C5: n <= constraint_positive__last
*** Proved C6: n >= constraint_positive__first
*** Proved C7: n <= constraint_positive__last
*** Proved C8: positive__first = 1
*** Proved C9: positive__last = 2147483647
*** Proved C10: integer__base__first = - 2147483648
*** Proved C11: integer__base__last = 2147483647
*** Proved C12: constraint_positive__first = 1
*** Proved C13: constraint_positive__last = 12

STEP 3
Command: consult
Consulted rulefile: d:/personal/organisation/dropbox/my dropbox/safe and secure software/bonus/umsetzung/project02/factorial/fac.rul
No errors trapped in reading this rulefile.

STEP 4
Command: infer
Successful inference with rule: fac(1)
  Proved subgoal: i < n and n <= n
Therefore i + 1 <= n
*** New H21: i + 1 <= n
*** Proved C2: i + 1 <= n
*** Proved all conclusions

*** PROVED VC function_fac_4

The only rule used in proving the above VC was:
          fac.rul::fac(1)





STEP 1
Command: newvc
Now attempting proof of VC: function_fac_5
H1:  i >= 1
H2:  i <= n
H3:  result = test(i)
H4:  n >= constraint_positive__first
H5:  n <= constraint_positive__last
H6:  n >= constraint_positive__first
H7:  n <= constraint_positive__last
H8:  positive__first = 1
H9:  positive__last = 2147483647
H10:  integer__base__first = - 2147483648
H11:  integer__base__last = 2147483647
H12:  constraint_positive__first = 1
H13:  constraint_positive__last = 12
H14:  i >= constraint_positive__first
H15:  i <= constraint_positive__last
H16:  not i >= n
H17:  i >= constraint_positive__first
H18:  i <= constraint_positive__last
H19:  i + 1 >= constraint_positive__first
H20:  i + 1 <= constraint_positive__last
-->
  C1:  i >= 0
  C2:  i + 1 <= n
  C3:  result = test(i)
  C4:  n >= constraint_positive__first
  C5:  n <= constraint_positive__last
  C6:  n >= constraint_positive__first
  C7:  n <= constraint_positive__last
  C8:  positive__first = 1
  C9:  positive__last = 2147483647
  C10:  integer__base__first = - 2147483648
  C11:  integer__base__last = 2147483647
  C12:  constraint_positive__first = 1
  C13:  constraint_positive__last = 12


STEP 2
Command: done
*** Proved C1: i >= 0
*** Proved C3: result = test(i)
*** Proved C4: n >= constraint_positive__first
*** Proved C5: n <= constraint_positive__last
*** Proved C6: n >= constraint_positive__first
*** Proved C7: n <= constraint_positive__last
*** Proved C8: positive__first = 1
*** Proved C9: positive__last = 2147483647
*** Proved C10: integer__base__first = - 2147483648
*** Proved C11: integer__base__last = 2147483647
*** Proved C12: constraint_positive__first = 1
*** Proved C13: constraint_positive__last = 12

STEP 3
Command: consult
Consulted rulefile: d:/personal/organisation/dropbox/my dropbox/safe and secure software/bonus/umsetzung/project02/factorial/fac.rul
No errors trapped in reading this rulefile.

STEP 4
Command: infer
Successful inference with rule: fac(1)
  Proved subgoal: i < n and n <= n
Therefore i + 1 <= n
*** New H21: i + 1 <= n
*** Proved C2: i + 1 <= n
*** Proved all conclusions

*** PROVED VC function_fac_5

The only rule used in proving the above VC was:
          fac.rul::fac(1)





STEP 1
Command: newvc
Now attempting proof of VC: function_fac_6
H1:  i >= 1
H2:  i <= n
H3:  result = test(i - 1)
H4:  n >= constraint_positive__first
H5:  n <= constraint_positive__last
H6:  n >= constraint_positive__first
H7:  n <= constraint_positive__last
H8:  positive__first = 1
H9:  positive__last = 2147483647
H10:  integer__base__first = - 2147483648
H11:  integer__base__last = 2147483647
H12:  constraint_positive__first = 1
H13:  constraint_positive__last = 12
H14:  i >= constraint_positive__first
H15:  i <= constraint_positive__last
H16:  result >= positive__first
H17:  result <= positive__last
-->
  C1:  result * i >= positive__first
  C2:  result * i <= positive__last
  C3:  i >= positive__first
  C4:  i <= positive__last


STEP 2
Command: done
*** Proved C3: i >= positive__first
*** Proved C4: i <= positive__last

STEP 3
Command: consult
Consulted rulefile: d:/personal/organisation/dropbox/my dropbox/safe and secure software/bonus/umsetzung/project02/factorial/fac.rul
No errors trapped in reading this rulefile.

STEP 4
Command: infer
Successful inference with rule: fac(3)
  Proved subgoal: positive__first = 1
  Proved subgoal: result >= 1 and i >= 1
Therefore result * i >= positive__first
*** New H18: result * i >= positive__first
*** Proved C1: result * i >= positive__first

STEP 5
Command: infer
Successful inference with rule: fac(4)
  Proved subgoal: i <= constraint_positive__last and result = test(i - 1)
Therefore result * i <= positive__last
*** New H19: result * i <= positive__last
*** Proved C2: result * i <= positive__last
*** Proved all conclusions

*** PROVED VC function_fac_6

The following rules were used in proving the above VC:
          fac.rul::fac(3)
          fac.rul::fac(4)





STEP 1
Command: newvc
Now attempting proof of VC: function_fac_7
H1:  i >= 1
H2:  i <= n
H3:  result = test(i - 1)
H4:  n >= constraint_positive__first
H5:  n <= constraint_positive__last
H6:  n >= constraint_positive__first
H7:  n <= constraint_positive__last
H8:  positive__first = 1
H9:  positive__last = 2147483647
H10:  integer__base__first = - 2147483648
H11:  integer__base__last = 2147483647
H12:  constraint_positive__first = 1
H13:  constraint_positive__last = 12
H14:  i >= constraint_positive__first
H15:  i <= constraint_positive__last
H16:  result >= positive__first
H17:  result <= positive__last
H18:  result * i >= positive__first
H19:  result * i <= positive__last
H20:  i >= positive__first
H21:  i <= positive__last
-->
  C1:  i >= 1
  C2:  i <= n
  C3:  result * i = test(i)
  C4:  n >= constraint_positive__first
  C5:  n <= constraint_positive__last
  C6:  n >= constraint_positive__first
  C7:  n <= constraint_positive__last
  C8:  positive__first = 1
  C9:  positive__last = 2147483647
  C10:  integer__base__first = - 2147483648
  C11:  integer__base__last = 2147483647
  C12:  constraint_positive__first = 1
  C13:  constraint_positive__last = 12


STEP 2
Command: done
*** Proved C1: i >= 1
*** Proved C2: i <= n
*** Proved C4: n >= constraint_positive__first
*** Proved C5: n <= constraint_positive__last
*** Proved C6: n >= constraint_positive__first
*** Proved C7: n <= constraint_positive__last
*** Proved C8: positive__first = 1
*** Proved C9: positive__last = 2147483647
*** Proved C10: integer__base__first = - 2147483648
*** Proved C11: integer__base__last = 2147483647
*** Proved C12: constraint_positive__first = 1
*** Proved C13: constraint_positive__last = 12

STEP 3
Command: consult
Consulted rulefile: d:/personal/organisation/dropbox/my dropbox/safe and secure software/bonus/umsetzung/project02/factorial/fac.rul
No errors trapped in reading this rulefile.

STEP 4
Command: infer
Successful inference with rule: fac(6)
  Proved subgoal: result = test(i - 1)
Therefore result * i = test(i)
*** New H22: result * i = test(i)
*** Proved C3: result * i = test(i)
*** Proved all conclusions

*** PROVED VC function_fac_7

The only rule used in proving the above VC was:
          fac.rul::fac(6)





STEP 1
Command: newvc
Now attempting proof of VC: function_fac_8
H1:  i = 1
H2:  result = 1
H3:  result = test(i)
H4:  n >= constraint_positive__first
H5:  n <= constraint_positive__last
H6:  n >= constraint_positive__first
H7:  n <= constraint_positive__last
H8:  positive__first = 1
H9:  positive__last = 2147483647
H10:  integer__base__first = - 2147483648
H11:  integer__base__last = 2147483647
H12:  constraint_positive__first = 1
H13:  constraint_positive__last = 12
H14:  i >= constraint_positive__first
H15:  i <= constraint_positive__last
H16:  i >= n
-->
  C1:  i <= n
  C2:  i >= n
  C3:  result = test(i)
  C4:  n >= constraint_positive__first
  C5:  n <= constraint_positive__last
  C6:  n >= constraint_positive__first
  C7:  n <= constraint_positive__last
  C8:  positive__first = 1
  C9:  positive__last = 2147483647
  C10:  integer__base__first = - 2147483648
  C11:  integer__base__last = 2147483647
  C12:  constraint_positive__first = 1
  C13:  constraint_positive__last = 12


STEP 2
Command: done
*** Proved C1: i <= n
*** Proved C2: i >= n
*** Proved C3: result = test(i)
*** Proved C4: n >= constraint_positive__first
*** Proved C5: n <= constraint_positive__last
*** Proved C6: n >= constraint_positive__first
*** Proved C7: n <= constraint_positive__last
*** Proved C8: positive__first = 1
*** Proved C9: positive__last = 2147483647
*** Proved C10: integer__base__first = - 2147483648
*** Proved C11: integer__base__last = 2147483647
*** Proved C12: constraint_positive__first = 1
*** Proved C13: constraint_positive__last = 12
*** Proved all conclusions

*** PROVED VC function_fac_8

The above proof did not make use of the proof rules database





STEP 1
Command: newvc
Now attempting proof of VC: function_fac_9
H1:  i >= 1
H2:  i <= n
H3:  result = test(i)
H4:  n >= constraint_positive__first
H5:  n <= constraint_positive__last
H6:  n >= constraint_positive__first
H7:  n <= constraint_positive__last
H8:  positive__first = 1
H9:  positive__last = 2147483647
H10:  integer__base__first = - 2147483648
H11:  integer__base__last = 2147483647
H12:  constraint_positive__first = 1
H13:  constraint_positive__last = 12
H14:  i >= constraint_positive__first
H15:  i <= constraint_positive__last
H16:  i >= n
-->
  C1:  i <= n
  C2:  i >= n
  C3:  result = test(i)
  C4:  n >= constraint_positive__first
  C5:  n <= constraint_positive__last
  C6:  n >= constraint_positive__first
  C7:  n <= constraint_positive__last
  C8:  positive__first = 1
  C9:  positive__last = 2147483647
  C10:  integer__base__first = - 2147483648
  C11:  integer__base__last = 2147483647
  C12:  constraint_positive__first = 1
  C13:  constraint_positive__last = 12


STEP 2
Command: done
*** Proved C1: i <= n
*** Proved C2: i >= n
*** Proved C3: result = test(i)
*** Proved C4: n >= constraint_positive__first
*** Proved C5: n <= constraint_positive__last
*** Proved C6: n >= constraint_positive__first
*** Proved C7: n <= constraint_positive__last
*** Proved C8: positive__first = 1
*** Proved C9: positive__last = 2147483647
*** Proved C10: integer__base__first = - 2147483648
*** Proved C11: integer__base__last = 2147483647
*** Proved C12: constraint_positive__first = 1
*** Proved C13: constraint_positive__last = 12
*** Proved all conclusions

*** PROVED VC function_fac_9

The above proof did not make use of the proof rules database





STEP 1
Command: newvc
Now attempting proof of VC: function_fac_10
H1:  i <= n
H2:  i >= n
H3:  result = test(i)
H4:  n >= constraint_positive__first
H5:  n <= constraint_positive__last
H6:  n >= constraint_positive__first
H7:  n <= constraint_positive__last
H8:  positive__first = 1
H9:  positive__last = 2147483647
H10:  integer__base__first = - 2147483648
H11:  integer__base__last = 2147483647
H12:  constraint_positive__first = 1
H13:  constraint_positive__last = 12
H14:  result >= positive__first
H15:  result <= positive__last
-->
  C1:  result = test(n)
  C2:  result >= positive__first
  C3:  result <= positive__last


STEP 2
Command: done
*** Proved C2: result >= positive__first
*** Proved C3: result <= positive__last

STEP 3
Command: consult
Consulted rulefile: d:/personal/organisation/dropbox/my dropbox/safe and secure software/bonus/umsetzung/project02/factorial/fac.rul
No errors trapped in reading this rulefile.

STEP 4
Command: infer
Successful inference with rule: fac(8)
  Proved subgoal: i <= n and n >= i and result = test(i)
Therefore result = test(n)
*** New H16: result = test(n)
*** Proved C1: result = test(n)
*** Proved all conclusions

*** PROVED VC function_fac_10

The only rule used in proving the above VC was:
          fac.rul::fac(8)





STEP 5
*** END OF PROOF SESSION


The following rules were used during the above proof session:
          fac.rul::fac(1)
          fac.rul::fac(2)
          fac.rul::fac(3)
          fac.rul::fac(4)
          fac.rul::fac(6)
          fac.rul::fac(8)

The following VCs were proved during this proof session:
        1 - 10

There are no more VCs left to prove.

Command: exit
