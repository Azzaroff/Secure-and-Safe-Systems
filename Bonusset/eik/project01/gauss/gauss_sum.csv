/* SAVED: 15-FEB-2012, at 17:45:01 */
'auto_done'('on').
'auto_newvc'('on').
'case_pointer'(0).
'command_logging'('on').
'csvfile_name'('gauss_sum.csv').
'current_vc'('procedure_gauss_sum_13', 13).
'current_vc_no'(14).
'display_subgoals_max'(10).
'display_var_free_only'('on').
'echo'('on').
'fdl_file_title'('procedure_gauss_sum').
'fdlfile_name'('gauss_sum.fdl').
'function'('round__', ['real'], 'integer').
'function_template'('round__'(A1), [A1], 'round__').
'hyp'(11, '<'('constraint_positive__last', 'positive__last')).
'hyp'(10, '='('constraint_positive__last', 46340)).
'hyp'(9, '='('integer__base__last', 2147483647)).
'hyp'(8, '='('integer__base__first', '-'(2147483648))).
'hyp'(7, '='('positive__last', 2147483647)).
'hyp'(6, '='('positive__first', 1)).
'hyp'(5, '='('constraint_positive__first', 'positive__first')).
'hyp'(4, '<='('n', 'constraint_positive__last')).
'hyp'(3, '>='('n', 'constraint_positive__first')).
'hyp'(2, '='('result', 'div'('*'('i', '+'('i', 1)), 2))).
'hyp'(1, '='('i', 'n')).
'hyp'(12, '='('result', 'div'('*'('n', '+'('n', 1)), 2))).
'indentation'(0).
'indentation_increment'(2).
'inverse_video'('[]').
'logfile_name'('gauss.plg').
'newline_after_prompts'('off').
'normal_video'('[]').
'on_filename'('gauss.rul').
'prooflog_width'(0).
'record_consults'('on').
'ruleused_this_session'(['gauss.rul', 'gauss'(3)]).
'ruleused_this_session'(['gauss.rul', 'gauss'(4)]).
'ruleused_this_session'(['gauss.rul', 'gauss'(7)]).
'ruleused_this_session'(['gauss.rul', 'gauss'(8)]).
'ruleused_this_session'(['gauss.rul', 'gauss'(6)]).
'show_vc_changes'('on').
'simplify_in_infer'('on').
'simplify_during_load'('on').
'spark_enabled'.
'step_number'(3).
'typechecking'('on').
'typechecking_during_load'('on').
'use_subst_rules_for_equality'('on').
'used_ident'('round__', 'function').
'used_ident'('constraint_positive__base__first', 'var_const').
'used_ident'('constraint_positive__base__last', 'var_const').
'used_ident'('positive__base__first', 'var_const').
'used_ident'('positive__base__last', 'var_const').
'used_ident'('integer__base__first', 'var_const').
'used_ident'('integer__base__last', 'var_const').
'used_ident'('constraint_positive__first', 'var_const').
'used_ident'('constraint_positive__last', 'var_const').
'used_ident'('constraint_positive__size', 'var_const').
'used_ident'('positive__first', 'var_const').
'used_ident'('positive__last', 'var_const').
'used_ident'('positive__size', 'var_const').
'used_ident'('integer__first', 'var_const').
'used_ident'('integer__last', 'var_const').
'used_ident'('integer__size', 'var_const').
'used_ident'('n', 'var_const').
'used_ident'('result', 'var_const').
'used_ident'('i', 'var_const').
'user_rulefile'('<='(A1, A2), 'gauss.rul').
'user_rulefile'('gauss.rul', 'gauss'(A1)).
'user_rulefile'('>='(A1, A2), 'gauss.rul').
'user_classification'('>='(A1, A2), 'gauss.rul', 'gauss'(A3), [':'(A1, 'ire'), ':'(A2, 'ire')]).
'user_classification'('<='(A1, A2), 'gauss.rul', 'gauss'(A3), [':'(A1, 'ire'), ':'(A2, 'ire')]).
'user_classification'(A1, 'gauss.rul', 'gauss'(A2), [':'(A1, 'any')]).
'var_const'('constraint_positive__base__first', 'integer', 'c').
'var_const'('constraint_positive__base__last', 'integer', 'c').
'var_const'('positive__base__first', 'integer', 'c').
'var_const'('positive__base__last', 'integer', 'c').
'var_const'('integer__base__first', 'integer', 'c').
'var_const'('integer__base__last', 'integer', 'c').
'var_const'('constraint_positive__first', 'integer', 'c').
'var_const'('constraint_positive__last', 'integer', 'c').
'var_const'('constraint_positive__size', 'integer', 'c').
'var_const'('positive__first', 'integer', 'c').
'var_const'('positive__last', 'integer', 'c').
'var_const'('positive__size', 'integer', 'c').
'var_const'('integer__first', 'integer', 'c').
'var_const'('integer__last', 'integer', 'c').
'var_const'('integer__size', 'integer', 'c').
'var_const'('n', 'integer', 'v').
'var_const'('result', 'integer', 'v').
'var_const'('i', 'integer', 'v').
'vcgfile_name'('gauss_sum.vcg').
'vcs_to_prove'('[]').
