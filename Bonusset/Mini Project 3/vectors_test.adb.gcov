        -:    0:Source:vectors_test.adb
        -:    0:Graph:vectors_test.gcno
        -:    0:Data:vectors_test.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:-- * This file has been automatically generated using `testgen'.
        -:    2:-- * Modifications should be made in the corresponding script file.
        -:    3:
        -:    4:  -- Test Driver Source
        -:    5:
        -:    6:  -- File:       /home/azzaroff/workspace/Secure-and-Safe-Systems/Bonusset/Mini Project 3/vectors_test.adb
        -:    7:  -- Script:     /home/azzaroff/workspace/Secure-and-Safe-Systems/Bonusset/Mini Project 3/vectors_test.ts
        -:    8:
        -:    9:
        -:   10:with Ada.Command_Line, Ada.Exceptions;
        -:   11:use type Ada.Command_Line.Exit_Status;
        -:   12:
        -:   13:with Vectors; 		use Vectors;
        -:   14:	with Ada.Text_IO;    	use Ada.Text_IO;
        -:   15:	with Redirect_Stdin;
        -:   16:	with Stdin;
        -:   17:	with Redirect_Stdout;
        -:   18:	with Stdout;
        -:   19:	with Read_Line;
        -:   20:
        1:   21:procedure vectors_test is
        -:   22:
        -:   23:  package Driver_Internals is
        -:   24:    -- Global Data
        1:   25:    Program_Terminate     : exception;
        1:   26:    Fail_Result           : Boolean := False;
        1:   27:    Unexpected_Error      : Boolean := False;
        1:   28:    Status                : Ada.Command_Line.Exit_Status := 0;
        -:   29:    -- Data of last Test Case
        1:   30:    Test_Case_Passed      : Boolean := False;
        -:   31:    -- Access Routines
        -:   32:    procedure Set_Path (Path : in String);
        -:   33:    function Path_Was (Path : in String) return Boolean;
        -:   34:    function Taken_Path return String;
        -:   35:    function Passed return Boolean;
        -:   36:    function Failed return Boolean;
        -:   37:  end Driver_Internals;
        -:   38:
        -:   39:  package body Driver_Internals is
        -:   40:    -- Data of last Test Case
        -:   41:    Test_Case_Path        : String (1.. 256);
        1:   42:    Test_Case_Path_Length : Natural := 0;
        -:   43:    -- Access Routines
       18:   44:    procedure Set_Path (Path : in String) is
        -:   45:      begin
       18:   46:        Test_Case_Path (Test_Case_Path'First..Path'Length) := Path;
       18:   47:        Test_Case_Path_Length := Path'Length;
       18:   48:      end Set_Path;
       18:   49:    function Path_Was (Path : in String) return Boolean is
        -:   50:      begin
       35:   51:        return Test_Case_Path_Length = Path'Length
       17:   52:            and then Test_Case_Path (1..Path'Length) = Path;
        -:   53:      end Path_Was;
        2:   54:    function Taken_Path return String is
        2:   55:      begin return Test_Case_Path (1..Test_Case_Path_Length); end Taken_Path;
        -:   56:    function Passed return Boolean is
        -:   57:      begin return Test_Case_Passed; end Passed;
        -:   58:    function Failed return Boolean is
        -:   59:      begin return not Test_Case_Passed; end Failed;
        -:   60:  end Driver_Internals;
        -:   61:
        -:   62:begin  -- unit main block
        -:   63:
        -:   64:  -- Test Case (1)   VECTORS mulityply_test_0
        -:   65:  declare
        -:   66:    v1 		: Float_Vector := (1.0, 1.0, 1.0);
        -:   67:    	v2 		: Float_Vector := (2.0, 2.0, 2.0);
        -:   68:    	result	: Float_Vector := (0.0, 0.0, 0.0);
        1:   69:    	testres : Float_Vector := (5.0, 5.0, 5.0);
        -:   70:  begin  -- test case
        1:   71:    begin  -- test part
        1:   72:      testres := Vectors."*"(v1,v2);
        1:   73:      Driver_Internals.Set_Path ("=>");
        -:   74:    exception
    #####:   75:      when E: others =>
    #####:   76:        Driver_Internals.Set_Path (Ada.Exceptions.Exception_Name (E));
        1:   77:    end;  -- test part
        2:   78:    begin  -- result part
        1:   79:      if Driver_Internals.Path_Was ("=>") then
        2:   80:        if testres = result
        -:   81:        then
        1:   82:          Driver_Internals.Test_Case_Passed := True;
        1:   83:          Put_Line ("(1)  pass.");
        -:   84:        else
    #####:   85:          Driver_Internals.Test_Case_Passed := False;
    #####:   86:          Driver_Internals.Fail_Result := True;
    #####:   87:          Put_Line ("(1)  VECTORS mulityply_test_0");
    #####:   88:          Put_Line ("           Script name:'vectors_test.ts'; Line:9 ");
    #####:   89:          Put_Line ("      ...FAIL.");
    #####:   90:          Put_Line ("         (" & "path `=>' was taken, but predicate is FALSE" & ")");
        -:   91:        end if;
        -:   92:      else
    #####:   93:        Driver_Internals.Test_Case_Passed := False;
    #####:   94:        Driver_Internals.Fail_Result := True;
    #####:   95:        Put_Line ("(1)  VECTORS mulityply_test_0");
    #####:   96:        Put_Line ("           Script name:'vectors_test.ts'; Line:9 ");
    #####:   97:        Put_Line ("      ...FAIL.");
    #####:   98:        Put_Line ("         (" & "path `" & Driver_Internals.Taken_Path & "' when `=>' was expected" & ")");
        -:   99:      end if;
        -:  100:    exception
    #####:  101:      when Driver_Internals.Program_Terminate =>
    #####:  102:        raise;
    #####:  103:      when E: others =>
    #####:  104:        Driver_Internals.Unexpected_Error := True;
    #####:  105:        Put_Line ("ERROR: exception " & Ada.Exceptions.Exception_Name (E) & " raised in result part of test case 1.");
    #####:  106:        raise Driver_Internals.Program_Terminate;
        1:  107:    end;  -- result part
        -:  108:  end;  -- test case
        -:  109:
        -:  110:  -- Test Case (2)   VECTORS mulityply_test_1
        -:  111:  declare
        -:  112:    v1 		: Float_Vector := (0.0, 0.0, 0.0);
        -:  113:    	v2 		: Float_Vector := (2.0, 2.0, 2.0);
        -:  114:    	result	: Float_Vector := (0.0, 0.0, 0.0);
        1:  115:    	testres : Float_Vector := (5.0, 5.0, 5.0);
        -:  116:  begin  -- test case
        2:  117:    begin  -- test part
        1:  118:      testres := Vectors."*"(v1,v2);
        1:  119:      Driver_Internals.Set_Path ("=>");
        -:  120:    exception
    #####:  121:      when E: others =>
    #####:  122:        Driver_Internals.Set_Path (Ada.Exceptions.Exception_Name (E));
        1:  123:    end;  -- test part
        2:  124:    begin  -- result part
        1:  125:      if Driver_Internals.Path_Was ("=>") then
        2:  126:        if testres = result
        -:  127:        then
        1:  128:          Driver_Internals.Test_Case_Passed := True;
        1:  129:          Put_Line ("(2)  pass.");
        -:  130:        else
    #####:  131:          Driver_Internals.Test_Case_Passed := False;
    #####:  132:          Driver_Internals.Fail_Result := True;
    #####:  133:          Put_Line ("(2)  VECTORS mulityply_test_1");
    #####:  134:          Put_Line ("           Script name:'vectors_test.ts'; Line:17 ");
    #####:  135:          Put_Line ("      ...FAIL.");
    #####:  136:          Put_Line ("         (" & "path `=>' was taken, but predicate is FALSE" & ")");
        -:  137:        end if;
        -:  138:      else
    #####:  139:        Driver_Internals.Test_Case_Passed := False;
    #####:  140:        Driver_Internals.Fail_Result := True;
    #####:  141:        Put_Line ("(2)  VECTORS mulityply_test_1");
    #####:  142:        Put_Line ("           Script name:'vectors_test.ts'; Line:17 ");
    #####:  143:        Put_Line ("      ...FAIL.");
    #####:  144:        Put_Line ("         (" & "path `" & Driver_Internals.Taken_Path & "' when `=>' was expected" & ")");
        -:  145:      end if;
        -:  146:    exception
    #####:  147:      when Driver_Internals.Program_Terminate =>
    #####:  148:        raise;
    #####:  149:      when E: others =>
    #####:  150:        Driver_Internals.Unexpected_Error := True;
    #####:  151:        Put_Line ("ERROR: exception " & Ada.Exceptions.Exception_Name (E) & " raised in result part of test case 2.");
    #####:  152:        raise Driver_Internals.Program_Terminate;
        1:  153:    end;  -- result part
        -:  154:  end;  -- test case
        -:  155:
        -:  156:  -- Test Case (3)   VECTORS mulityply_test_2
        -:  157:  declare
        -:  158:    v1 		: Float_Vector := (1.0, 1.0, 1.0);
        -:  159:    	v2 		: Float_Vector := (0.0, 0.0, 0.0);
        -:  160:    	result	: Float_Vector := (0.0, 0.0, 0.0);
        1:  161:    	testres : Float_Vector := (5.0, 5.0, 5.0);
        -:  162:  begin  -- test case
        2:  163:    begin  -- test part
        1:  164:      testres := Vectors."*"(v1,v2);
        1:  165:      Driver_Internals.Set_Path ("=>");
        -:  166:    exception
    #####:  167:      when E: others =>
    #####:  168:        Driver_Internals.Set_Path (Ada.Exceptions.Exception_Name (E));
        1:  169:    end;  -- test part
        2:  170:    begin  -- result part
        1:  171:      if Driver_Internals.Path_Was ("=>") then
        2:  172:        if testres = result
        -:  173:        then
        1:  174:          Driver_Internals.Test_Case_Passed := True;
        1:  175:          Put_Line ("(3)  pass.");
        -:  176:        else
    #####:  177:          Driver_Internals.Test_Case_Passed := False;
    #####:  178:          Driver_Internals.Fail_Result := True;
    #####:  179:          Put_Line ("(3)  VECTORS mulityply_test_2");
    #####:  180:          Put_Line ("           Script name:'vectors_test.ts'; Line:25 ");
    #####:  181:          Put_Line ("      ...FAIL.");
    #####:  182:          Put_Line ("         (" & "path `=>' was taken, but predicate is FALSE" & ")");
        -:  183:        end if;
        -:  184:      else
    #####:  185:        Driver_Internals.Test_Case_Passed := False;
    #####:  186:        Driver_Internals.Fail_Result := True;
    #####:  187:        Put_Line ("(3)  VECTORS mulityply_test_2");
    #####:  188:        Put_Line ("           Script name:'vectors_test.ts'; Line:25 ");
    #####:  189:        Put_Line ("      ...FAIL.");
    #####:  190:        Put_Line ("         (" & "path `" & Driver_Internals.Taken_Path & "' when `=>' was expected" & ")");
        -:  191:      end if;
        -:  192:    exception
    #####:  193:      when Driver_Internals.Program_Terminate =>
    #####:  194:        raise;
    #####:  195:      when E: others =>
    #####:  196:        Driver_Internals.Unexpected_Error := True;
    #####:  197:        Put_Line ("ERROR: exception " & Ada.Exceptions.Exception_Name (E) & " raised in result part of test case 3.");
    #####:  198:        raise Driver_Internals.Program_Terminate;
        1:  199:    end;  -- result part
        -:  200:  end;  -- test case
        -:  201:
        -:  202:  -- Test Case (4)   VECTORS mulityply_test_3
        -:  203:  declare
        1:  204:    x		: Float := Float'First;
        1:  205:    	y		: Float := 1.0;
        -:  206:    	v1 		: Float_Vector := (x, x, x);
        -:  207:    	v2 		: Float_Vector := (1.0, 1.0, 1.0);
        -:  208:    	result	: Float_Vector := (x*y-x*y, x*y-x*y, x*y-x*y);
        1:  209:    	testres : Float_Vector := (5.0, 5.0, 5.0);
        -:  210:  begin  -- test case
        2:  211:    begin  -- test part
        1:  212:      testres := Vectors."*"(v1,v2);
        1:  213:      Driver_Internals.Set_Path ("=>");
        -:  214:    exception
    #####:  215:      when E: others =>
    #####:  216:        Driver_Internals.Set_Path (Ada.Exceptions.Exception_Name (E));
        1:  217:    end;  -- test part
        2:  218:    begin  -- result part
        1:  219:      if Driver_Internals.Path_Was ("=>") then
        2:  220:        if testres = result
        -:  221:        then
        1:  222:          Driver_Internals.Test_Case_Passed := True;
        1:  223:          Put_Line ("(4)  pass.");
        -:  224:        else
    #####:  225:          Driver_Internals.Test_Case_Passed := False;
    #####:  226:          Driver_Internals.Fail_Result := True;
    #####:  227:          Put_Line ("(4)  VECTORS mulityply_test_3");
    #####:  228:          Put_Line ("           Script name:'vectors_test.ts'; Line:33 ");
    #####:  229:          Put_Line ("      ...FAIL.");
    #####:  230:          Put_Line ("         (" & "path `=>' was taken, but predicate is FALSE" & ")");
        -:  231:        end if;
        -:  232:      else
    #####:  233:        Driver_Internals.Test_Case_Passed := False;
    #####:  234:        Driver_Internals.Fail_Result := True;
    #####:  235:        Put_Line ("(4)  VECTORS mulityply_test_3");
    #####:  236:        Put_Line ("           Script name:'vectors_test.ts'; Line:33 ");
    #####:  237:        Put_Line ("      ...FAIL.");
    #####:  238:        Put_Line ("         (" & "path `" & Driver_Internals.Taken_Path & "' when `=>' was expected" & ")");
        -:  239:      end if;
        -:  240:    exception
    #####:  241:      when Driver_Internals.Program_Terminate =>
    #####:  242:        raise;
    #####:  243:      when E: others =>
    #####:  244:        Driver_Internals.Unexpected_Error := True;
    #####:  245:        Put_Line ("ERROR: exception " & Ada.Exceptions.Exception_Name (E) & " raised in result part of test case 4.");
    #####:  246:        raise Driver_Internals.Program_Terminate;
        1:  247:    end;  -- result part
        -:  248:  end;  -- test case
        -:  249:
        -:  250:  -- Test Case (5)   VECTORS mulityply_test_4
        -:  251:  declare
        1:  252:    x		: Float := Float'Last;
        1:  253:    	y		: Float := 1.0;
        -:  254:    	v1 		: Float_Vector := (x, x, x);
        -:  255:    	v2 		: Float_Vector := (1.0, 1.0, 1.0);
        -:  256:    	result	: Float_Vector := (x*y-x*y, x*y-x*y, x*y-x*y);
        1:  257:    	testres : Float_Vector := (5.0, 5.0, 5.0);
        -:  258:  begin  -- test case
        2:  259:    begin  -- test part
        1:  260:      testres := Vectors."*"(v1,v2);
        1:  261:      Driver_Internals.Set_Path ("=>");
        -:  262:    exception
    #####:  263:      when E: others =>
    #####:  264:        Driver_Internals.Set_Path (Ada.Exceptions.Exception_Name (E));
        1:  265:    end;  -- test part
        2:  266:    begin  -- result part
        1:  267:      if Driver_Internals.Path_Was ("=>") then
        2:  268:        if testres = result
        -:  269:        then
        1:  270:          Driver_Internals.Test_Case_Passed := True;
        1:  271:          Put_Line ("(5)  pass.");
        -:  272:        else
    #####:  273:          Driver_Internals.Test_Case_Passed := False;
    #####:  274:          Driver_Internals.Fail_Result := True;
    #####:  275:          Put_Line ("(5)  VECTORS mulityply_test_4");
    #####:  276:          Put_Line ("           Script name:'vectors_test.ts'; Line:43 ");
    #####:  277:          Put_Line ("      ...FAIL.");
    #####:  278:          Put_Line ("         (" & "path `=>' was taken, but predicate is FALSE" & ")");
        -:  279:        end if;
        -:  280:      else
    #####:  281:        Driver_Internals.Test_Case_Passed := False;
    #####:  282:        Driver_Internals.Fail_Result := True;
    #####:  283:        Put_Line ("(5)  VECTORS mulityply_test_4");
    #####:  284:        Put_Line ("           Script name:'vectors_test.ts'; Line:43 ");
    #####:  285:        Put_Line ("      ...FAIL.");
    #####:  286:        Put_Line ("         (" & "path `" & Driver_Internals.Taken_Path & "' when `=>' was expected" & ")");
        -:  287:      end if;
        -:  288:    exception
    #####:  289:      when Driver_Internals.Program_Terminate =>
    #####:  290:        raise;
    #####:  291:      when E: others =>
    #####:  292:        Driver_Internals.Unexpected_Error := True;
    #####:  293:        Put_Line ("ERROR: exception " & Ada.Exceptions.Exception_Name (E) & " raised in result part of test case 5.");
    #####:  294:        raise Driver_Internals.Program_Terminate;
        1:  295:    end;  -- result part
        -:  296:  end;  -- test case
        -:  297:
        -:  298:  -- Test Case (6)   VECTORS mulityply_scalar_test_0
        -:  299:  declare
        1:  300:    x		: Float := Float'First;
        1:  301:    	y		: Float := 2.0;
        -:  302:    	v1 		: Float_Vector := (1.0, 1.0, 1.0);
        -:  303:    	result	: Float_Vector := (2.0, 2.0, 2.0);
        1:  304:    	testres : Float_Vector := (5.0, 5.0, 5.0);
        -:  305:  begin  -- test case
        2:  306:    begin  -- test part
        1:  307:      testres := Vectors."*"(v1,y);
        1:  308:      Driver_Internals.Set_Path ("=>");
        -:  309:    exception
    #####:  310:      when E: others =>
    #####:  311:        Driver_Internals.Set_Path (Ada.Exceptions.Exception_Name (E));
        1:  312:    end;  -- test part
        2:  313:    begin  -- result part
        1:  314:      if Driver_Internals.Path_Was ("=>") then
        2:  315:        if testres = result
        -:  316:        then
        1:  317:          Driver_Internals.Test_Case_Passed := True;
        1:  318:          Put_Line ("(6)  pass.");
        -:  319:        else
    #####:  320:          Driver_Internals.Test_Case_Passed := False;
    #####:  321:          Driver_Internals.Fail_Result := True;
    #####:  322:          Put_Line ("(6)  VECTORS mulityply_scalar_test_0");
    #####:  323:          Put_Line ("           Script name:'vectors_test.ts'; Line:54 ");
    #####:  324:          Put_Line ("      ...FAIL.");
    #####:  325:          Put_Line ("         (" & "path `=>' was taken, but predicate is FALSE" & ")");
        -:  326:        end if;
        -:  327:      else
    #####:  328:        Driver_Internals.Test_Case_Passed := False;
    #####:  329:        Driver_Internals.Fail_Result := True;
    #####:  330:        Put_Line ("(6)  VECTORS mulityply_scalar_test_0");
    #####:  331:        Put_Line ("           Script name:'vectors_test.ts'; Line:54 ");
    #####:  332:        Put_Line ("      ...FAIL.");
    #####:  333:        Put_Line ("         (" & "path `" & Driver_Internals.Taken_Path & "' when `=>' was expected" & ")");
        -:  334:      end if;
        -:  335:    exception
    #####:  336:      when Driver_Internals.Program_Terminate =>
    #####:  337:        raise;
    #####:  338:      when E: others =>
    #####:  339:        Driver_Internals.Unexpected_Error := True;
    #####:  340:        Put_Line ("ERROR: exception " & Ada.Exceptions.Exception_Name (E) & " raised in result part of test case 6.");
    #####:  341:        raise Driver_Internals.Program_Terminate;
        1:  342:    end;  -- result part
        -:  343:  end;  -- test case
        -:  344:
        -:  345:  -- Test Case (7)   VECTORS mulityply_scalar_test_1
        -:  346:  declare
        1:  347:    y		: Float := 0.0;
        -:  348:    	v1 		: Float_Vector := (1.0, 1.0, 1.0);
        -:  349:    	result	: Float_Vector := (0.0, 0.0, 0.0);
        1:  350:    	testres : Float_Vector := (5.0, 5.0, 5.0);
        -:  351:  begin  -- test case
        2:  352:    begin  -- test part
        1:  353:      testres := Vectors."*"(v1,y);
        1:  354:      Driver_Internals.Set_Path ("=>");
        -:  355:    exception
    #####:  356:      when E: others =>
    #####:  357:        Driver_Internals.Set_Path (Ada.Exceptions.Exception_Name (E));
        1:  358:    end;  -- test part
        2:  359:    begin  -- result part
        1:  360:      if Driver_Internals.Path_Was ("=>") then
        2:  361:        if testres = result
        -:  362:        then
        1:  363:          Driver_Internals.Test_Case_Passed := True;
        1:  364:          Put_Line ("(7)  pass.");
        -:  365:        else
    #####:  366:          Driver_Internals.Test_Case_Passed := False;
    #####:  367:          Driver_Internals.Fail_Result := True;
    #####:  368:          Put_Line ("(7)  VECTORS mulityply_scalar_test_1");
    #####:  369:          Put_Line ("           Script name:'vectors_test.ts'; Line:63 ");
    #####:  370:          Put_Line ("      ...FAIL.");
    #####:  371:          Put_Line ("         (" & "path `=>' was taken, but predicate is FALSE" & ")");
        -:  372:        end if;
        -:  373:      else
    #####:  374:        Driver_Internals.Test_Case_Passed := False;
    #####:  375:        Driver_Internals.Fail_Result := True;
    #####:  376:        Put_Line ("(7)  VECTORS mulityply_scalar_test_1");
    #####:  377:        Put_Line ("           Script name:'vectors_test.ts'; Line:63 ");
    #####:  378:        Put_Line ("      ...FAIL.");
    #####:  379:        Put_Line ("         (" & "path `" & Driver_Internals.Taken_Path & "' when `=>' was expected" & ")");
        -:  380:      end if;
        -:  381:    exception
    #####:  382:      when Driver_Internals.Program_Terminate =>
    #####:  383:        raise;
    #####:  384:      when E: others =>
    #####:  385:        Driver_Internals.Unexpected_Error := True;
    #####:  386:        Put_Line ("ERROR: exception " & Ada.Exceptions.Exception_Name (E) & " raised in result part of test case 7.");
    #####:  387:        raise Driver_Internals.Program_Terminate;
        1:  388:    end;  -- result part
        -:  389:  end;  -- test case
        -:  390:
        -:  391:  -- Test Case (8)   VECTORS mulityply_scalar_test_2
        -:  392:  declare
        1:  393:    y		: Float := 8.0;
        -:  394:    	v1 		: Float_Vector := (0.0, 0.0, 0.0);
        -:  395:    	result	: Float_Vector := (0.0, 0.0, 0.0);
        1:  396:    	testres : Float_Vector := (5.0, 5.0, 5.0);
        -:  397:  begin  -- test case
        2:  398:    begin  -- test part
        1:  399:      testres := Vectors."*"(v1,y);
        1:  400:      Driver_Internals.Set_Path ("=>");
        -:  401:    exception
    #####:  402:      when E: others =>
    #####:  403:        Driver_Internals.Set_Path (Ada.Exceptions.Exception_Name (E));
        1:  404:    end;  -- test part
        2:  405:    begin  -- result part
        1:  406:      if Driver_Internals.Path_Was ("=>") then
        2:  407:        if testres = result
        -:  408:        then
        1:  409:          Driver_Internals.Test_Case_Passed := True;
        1:  410:          Put_Line ("(8)  pass.");
        -:  411:        else
    #####:  412:          Driver_Internals.Test_Case_Passed := False;
    #####:  413:          Driver_Internals.Fail_Result := True;
    #####:  414:          Put_Line ("(8)  VECTORS mulityply_scalar_test_2");
    #####:  415:          Put_Line ("           Script name:'vectors_test.ts'; Line:71 ");
    #####:  416:          Put_Line ("      ...FAIL.");
    #####:  417:          Put_Line ("         (" & "path `=>' was taken, but predicate is FALSE" & ")");
        -:  418:        end if;
        -:  419:      else
    #####:  420:        Driver_Internals.Test_Case_Passed := False;
    #####:  421:        Driver_Internals.Fail_Result := True;
    #####:  422:        Put_Line ("(8)  VECTORS mulityply_scalar_test_2");
    #####:  423:        Put_Line ("           Script name:'vectors_test.ts'; Line:71 ");
    #####:  424:        Put_Line ("      ...FAIL.");
    #####:  425:        Put_Line ("         (" & "path `" & Driver_Internals.Taken_Path & "' when `=>' was expected" & ")");
        -:  426:      end if;
        -:  427:    exception
    #####:  428:      when Driver_Internals.Program_Terminate =>
    #####:  429:        raise;
    #####:  430:      when E: others =>
    #####:  431:        Driver_Internals.Unexpected_Error := True;
    #####:  432:        Put_Line ("ERROR: exception " & Ada.Exceptions.Exception_Name (E) & " raised in result part of test case 8.");
    #####:  433:        raise Driver_Internals.Program_Terminate;
        1:  434:    end;  -- result part
        -:  435:  end;  -- test case
        -:  436:
        -:  437:  -- Test Case (9)   VECTORS mulityply_scalar_test_3
        -:  438:  declare
        1:  439:    x		: Float := Float'First;
        1:  440:    	y		: Float := 1.0;
        -:  441:    	v1 		: Float_Vector := (1.0, 1.0, 1.0);
        -:  442:    	result	: Float_Vector := (x, x, x);
        1:  443:    	testres : Float_Vector := (5.0, 5.0, 5.0);
        -:  444:  begin  -- test case
        2:  445:    begin  -- test part
        1:  446:      testres := Vectors."*"(v1,x);
        1:  447:      Driver_Internals.Set_Path ("=>");
        -:  448:    exception
    #####:  449:      when E: others =>
    #####:  450:        Driver_Internals.Set_Path (Ada.Exceptions.Exception_Name (E));
        1:  451:    end;  -- test part
        2:  452:    begin  -- result part
        1:  453:      if Driver_Internals.Path_Was ("=>") then
        2:  454:        if testres = result
        -:  455:        then
        1:  456:          Driver_Internals.Test_Case_Passed := True;
        1:  457:          Put_Line ("(9)  pass.");
        -:  458:        else
    #####:  459:          Driver_Internals.Test_Case_Passed := False;
    #####:  460:          Driver_Internals.Fail_Result := True;
    #####:  461:          Put_Line ("(9)  VECTORS mulityply_scalar_test_3");
    #####:  462:          Put_Line ("           Script name:'vectors_test.ts'; Line:79 ");
    #####:  463:          Put_Line ("      ...FAIL.");
    #####:  464:          Put_Line ("         (" & "path `=>' was taken, but predicate is FALSE" & ")");
        -:  465:        end if;
        -:  466:      else
    #####:  467:        Driver_Internals.Test_Case_Passed := False;
    #####:  468:        Driver_Internals.Fail_Result := True;
    #####:  469:        Put_Line ("(9)  VECTORS mulityply_scalar_test_3");
    #####:  470:        Put_Line ("           Script name:'vectors_test.ts'; Line:79 ");
    #####:  471:        Put_Line ("      ...FAIL.");
    #####:  472:        Put_Line ("         (" & "path `" & Driver_Internals.Taken_Path & "' when `=>' was expected" & ")");
        -:  473:      end if;
        -:  474:    exception
    #####:  475:      when Driver_Internals.Program_Terminate =>
    #####:  476:        raise;
    #####:  477:      when E: others =>
    #####:  478:        Driver_Internals.Unexpected_Error := True;
    #####:  479:        Put_Line ("ERROR: exception " & Ada.Exceptions.Exception_Name (E) & " raised in result part of test case 9.");
    #####:  480:        raise Driver_Internals.Program_Terminate;
        1:  481:    end;  -- result part
        -:  482:  end;  -- test case
        -:  483:
        -:  484:  -- Test Case (10)   VECTORS mulityply_scalar_test_4
        -:  485:  declare
        1:  486:    x		: Float := Float'First;
        1:  487:    	y		: Float := 1.0;
        -:  488:    	v1 		: Float_Vector := (x, x, x);
        -:  489:    	result	: Float_Vector := (x, x, x);
        1:  490:    	testres : Float_Vector := (5.0, 5.0, 5.0);
        -:  491:  begin  -- test case
        2:  492:    begin  -- test part
        1:  493:      testres := Vectors."*"(v1,y);
        1:  494:      Driver_Internals.Set_Path ("=>");
        -:  495:    exception
    #####:  496:      when E: others =>
    #####:  497:        Driver_Internals.Set_Path (Ada.Exceptions.Exception_Name (E));
        1:  498:    end;  -- test part
        2:  499:    begin  -- result part
        1:  500:      if Driver_Internals.Path_Was ("=>") then
        2:  501:        if testres = result
        -:  502:        then
        1:  503:          Driver_Internals.Test_Case_Passed := True;
        1:  504:          Put_Line ("(10)  pass.");
        -:  505:        else
    #####:  506:          Driver_Internals.Test_Case_Passed := False;
    #####:  507:          Driver_Internals.Fail_Result := True;
    #####:  508:          Put_Line ("(10)  VECTORS mulityply_scalar_test_4");
    #####:  509:          Put_Line ("           Script name:'vectors_test.ts'; Line:88 ");
    #####:  510:          Put_Line ("      ...FAIL.");
    #####:  511:          Put_Line ("         (" & "path `=>' was taken, but predicate is FALSE" & ")");
        -:  512:        end if;
        -:  513:      else
    #####:  514:        Driver_Internals.Test_Case_Passed := False;
    #####:  515:        Driver_Internals.Fail_Result := True;
    #####:  516:        Put_Line ("(10)  VECTORS mulityply_scalar_test_4");
    #####:  517:        Put_Line ("           Script name:'vectors_test.ts'; Line:88 ");
    #####:  518:        Put_Line ("      ...FAIL.");
    #####:  519:        Put_Line ("         (" & "path `" & Driver_Internals.Taken_Path & "' when `=>' was expected" & ")");
        -:  520:      end if;
        -:  521:    exception
    #####:  522:      when Driver_Internals.Program_Terminate =>
    #####:  523:        raise;
    #####:  524:      when E: others =>
    #####:  525:        Driver_Internals.Unexpected_Error := True;
    #####:  526:        Put_Line ("ERROR: exception " & Ada.Exceptions.Exception_Name (E) & " raised in result part of test case 10.");
    #####:  527:        raise Driver_Internals.Program_Terminate;
        1:  528:    end;  -- result part
        -:  529:  end;  -- test case
        -:  530:
        -:  531:  -- Test Case (11)   VECTORS mulityply_scalar_test_4
        -:  532:  declare
        1:  533:    x		: Float := Float'Last;
        1:  534:    	y		: Float := 1.0;
        -:  535:    	v1 		: Float_Vector := (1.0, 1.0, 1.0);
        -:  536:    	result	: Float_Vector := (x, x, x);
        1:  537:    	testres : Float_Vector := (5.0, 5.0, 5.0);
        -:  538:  begin  -- test case
        2:  539:    begin  -- test part
        1:  540:      testres := Vectors."*"(v1,x);
        1:  541:      Driver_Internals.Set_Path ("=>");
        -:  542:    exception
    #####:  543:      when E: others =>
    #####:  544:        Driver_Internals.Set_Path (Ada.Exceptions.Exception_Name (E));
        1:  545:    end;  -- test part
        2:  546:    begin  -- result part
        1:  547:      if Driver_Internals.Path_Was ("=>") then
        2:  548:        if testres = result
        -:  549:        then
        1:  550:          Driver_Internals.Test_Case_Passed := True;
        1:  551:          Put_Line ("(11)  pass.");
        -:  552:        else
    #####:  553:          Driver_Internals.Test_Case_Passed := False;
    #####:  554:          Driver_Internals.Fail_Result := True;
    #####:  555:          Put_Line ("(11)  VECTORS mulityply_scalar_test_4");
    #####:  556:          Put_Line ("           Script name:'vectors_test.ts'; Line:97 ");
    #####:  557:          Put_Line ("      ...FAIL.");
    #####:  558:          Put_Line ("         (" & "path `=>' was taken, but predicate is FALSE" & ")");
        -:  559:        end if;
        -:  560:      else
    #####:  561:        Driver_Internals.Test_Case_Passed := False;
    #####:  562:        Driver_Internals.Fail_Result := True;
    #####:  563:        Put_Line ("(11)  VECTORS mulityply_scalar_test_4");
    #####:  564:        Put_Line ("           Script name:'vectors_test.ts'; Line:97 ");
    #####:  565:        Put_Line ("      ...FAIL.");
    #####:  566:        Put_Line ("         (" & "path `" & Driver_Internals.Taken_Path & "' when `=>' was expected" & ")");
        -:  567:      end if;
        -:  568:    exception
    #####:  569:      when Driver_Internals.Program_Terminate =>
    #####:  570:        raise;
    #####:  571:      when E: others =>
    #####:  572:        Driver_Internals.Unexpected_Error := True;
    #####:  573:        Put_Line ("ERROR: exception " & Ada.Exceptions.Exception_Name (E) & " raised in result part of test case 11.");
    #####:  574:        raise Driver_Internals.Program_Terminate;
        1:  575:    end;  -- result part
        -:  576:  end;  -- test case
        -:  577:
        -:  578:  -- Test Case (12)   VECTORS mulityply_scalar_test_5
        -:  579:  declare
        1:  580:    x		: Float := Float'Last;
        1:  581:    	y		: Float := 1.0;
        -:  582:    	v1 		: Float_Vector := (x, x, x);
        -:  583:    	result	: Float_Vector := (x, x, x);
        1:  584:    	testres : Float_Vector := (5.0, 5.0, 5.0);
        -:  585:  begin  -- test case
        2:  586:    begin  -- test part
        1:  587:      testres := Vectors."*"(v1,y);
        1:  588:      Driver_Internals.Set_Path ("=>");
        -:  589:    exception
    #####:  590:      when E: others =>
    #####:  591:        Driver_Internals.Set_Path (Ada.Exceptions.Exception_Name (E));
        1:  592:    end;  -- test part
        2:  593:    begin  -- result part
        1:  594:      if Driver_Internals.Path_Was ("=>") then
        2:  595:        if testres = result
        -:  596:        then
        1:  597:          Driver_Internals.Test_Case_Passed := True;
        1:  598:          Put_Line ("(12)  pass.");
        -:  599:        else
    #####:  600:          Driver_Internals.Test_Case_Passed := False;
    #####:  601:          Driver_Internals.Fail_Result := True;
    #####:  602:          Put_Line ("(12)  VECTORS mulityply_scalar_test_5");
    #####:  603:          Put_Line ("           Script name:'vectors_test.ts'; Line:106 ");
    #####:  604:          Put_Line ("      ...FAIL.");
    #####:  605:          Put_Line ("         (" & "path `=>' was taken, but predicate is FALSE" & ")");
        -:  606:        end if;
        -:  607:      else
    #####:  608:        Driver_Internals.Test_Case_Passed := False;
    #####:  609:        Driver_Internals.Fail_Result := True;
    #####:  610:        Put_Line ("(12)  VECTORS mulityply_scalar_test_5");
    #####:  611:        Put_Line ("           Script name:'vectors_test.ts'; Line:106 ");
    #####:  612:        Put_Line ("      ...FAIL.");
    #####:  613:        Put_Line ("         (" & "path `" & Driver_Internals.Taken_Path & "' when `=>' was expected" & ")");
        -:  614:      end if;
        -:  615:    exception
    #####:  616:      when Driver_Internals.Program_Terminate =>
    #####:  617:        raise;
    #####:  618:      when E: others =>
    #####:  619:        Driver_Internals.Unexpected_Error := True;
    #####:  620:        Put_Line ("ERROR: exception " & Ada.Exceptions.Exception_Name (E) & " raised in result part of test case 12.");
    #####:  621:        raise Driver_Internals.Program_Terminate;
        1:  622:    end;  -- result part
        -:  623:  end;  -- test case
        -:  624:
        -:  625:  -- Test Case (13)   VECTORS mulityply_scalar_product_test_0
        -:  626:  declare
        1:  627:    x		: Float := 2.0;
        1:  628:    	y		: Float := 1.0;
        -:  629:    	v1 		: Float_Vector := (x, x, x);
        -:  630:    	v2 		: Float_Vector := (y, y, y);
        1:  631:    	result	: Float := 6.0;
        1:  632:    	testres : Float := 2.0;
        -:  633:  begin  -- test case
        -:  634:    begin  -- test part
        1:  635:      testres := Vectors."*"(v1,v2);
        1:  636:      Driver_Internals.Set_Path ("=>");
        -:  637:    exception
    #####:  638:      when E: others =>
    #####:  639:        Driver_Internals.Set_Path (Ada.Exceptions.Exception_Name (E));
        -:  640:    end;  -- test part
        2:  641:    begin  -- result part
        1:  642:      if Driver_Internals.Path_Was ("=>") then
        1:  643:        if testres = result
        -:  644:        then
        1:  645:          Driver_Internals.Test_Case_Passed := True;
        1:  646:          Put_Line ("(13)  pass.");
        -:  647:        else
    #####:  648:          Driver_Internals.Test_Case_Passed := False;
    #####:  649:          Driver_Internals.Fail_Result := True;
    #####:  650:          Put_Line ("(13)  VECTORS mulityply_scalar_product_test_0");
    #####:  651:          Put_Line ("           Script name:'vectors_test.ts'; Line:117 ");
    #####:  652:          Put_Line ("      ...FAIL.");
    #####:  653:          Put_Line ("         (" & "path `=>' was taken, but predicate is FALSE" & ")");
        -:  654:        end if;
        -:  655:      else
    #####:  656:        Driver_Internals.Test_Case_Passed := False;
    #####:  657:        Driver_Internals.Fail_Result := True;
    #####:  658:        Put_Line ("(13)  VECTORS mulityply_scalar_product_test_0");
    #####:  659:        Put_Line ("           Script name:'vectors_test.ts'; Line:117 ");
    #####:  660:        Put_Line ("      ...FAIL.");
    #####:  661:        Put_Line ("         (" & "path `" & Driver_Internals.Taken_Path & "' when `=>' was expected" & ")");
        -:  662:      end if;
        -:  663:    exception
    #####:  664:      when Driver_Internals.Program_Terminate =>
    #####:  665:        raise;
    #####:  666:      when E: others =>
    #####:  667:        Driver_Internals.Unexpected_Error := True;
    #####:  668:        Put_Line ("ERROR: exception " & Ada.Exceptions.Exception_Name (E) & " raised in result part of test case 13.");
    #####:  669:        raise Driver_Internals.Program_Terminate;
        1:  670:    end;  -- result part
        -:  671:  end;  -- test case
        -:  672:
        -:  673:  -- Test Case (14)   VECTORS mulityply_scalar_product_test_1
        -:  674:  declare
        1:  675:    x		: Float := 2.0;
        1:  676:    	y		: Float := 0.0;
        -:  677:    	v1 		: Float_Vector := (x, x, x);
        -:  678:    	v2 		: Float_Vector := (y, y, y);
        1:  679:    	result	: Float := 0.0;
        1:  680:    	testres : Float := 2.0;
        -:  681:  begin  -- test case
        -:  682:    begin  -- test part
        1:  683:      testres := Vectors."*"(v1,v2);
        1:  684:      Driver_Internals.Set_Path ("=>");
        -:  685:    exception
    #####:  686:      when E: others =>
    #####:  687:        Driver_Internals.Set_Path (Ada.Exceptions.Exception_Name (E));
        -:  688:    end;  -- test part
        2:  689:    begin  -- result part
        1:  690:      if Driver_Internals.Path_Was ("=>") then
        1:  691:        if testres = result
        -:  692:        then
        1:  693:          Driver_Internals.Test_Case_Passed := True;
        1:  694:          Put_Line ("(14)  pass.");
        -:  695:        else
    #####:  696:          Driver_Internals.Test_Case_Passed := False;
    #####:  697:          Driver_Internals.Fail_Result := True;
    #####:  698:          Put_Line ("(14)  VECTORS mulityply_scalar_product_test_1");
    #####:  699:          Put_Line ("           Script name:'vectors_test.ts'; Line:127 ");
    #####:  700:          Put_Line ("      ...FAIL.");
    #####:  701:          Put_Line ("         (" & "path `=>' was taken, but predicate is FALSE" & ")");
        -:  702:        end if;
        -:  703:      else
    #####:  704:        Driver_Internals.Test_Case_Passed := False;
    #####:  705:        Driver_Internals.Fail_Result := True;
    #####:  706:        Put_Line ("(14)  VECTORS mulityply_scalar_product_test_1");
    #####:  707:        Put_Line ("           Script name:'vectors_test.ts'; Line:127 ");
    #####:  708:        Put_Line ("      ...FAIL.");
    #####:  709:        Put_Line ("         (" & "path `" & Driver_Internals.Taken_Path & "' when `=>' was expected" & ")");
        -:  710:      end if;
        -:  711:    exception
    #####:  712:      when Driver_Internals.Program_Terminate =>
    #####:  713:        raise;
    #####:  714:      when E: others =>
    #####:  715:        Driver_Internals.Unexpected_Error := True;
    #####:  716:        Put_Line ("ERROR: exception " & Ada.Exceptions.Exception_Name (E) & " raised in result part of test case 14.");
    #####:  717:        raise Driver_Internals.Program_Terminate;
        1:  718:    end;  -- result part
        -:  719:  end;  -- test case
        -:  720:
        -:  721:  -- Test Case (15)   VECTORS mulityply_scalar_product_test_2
        -:  722:  declare
        1:  723:    x		: Float := Float'First;
        1:  724:    	y		: Float := 1.0;
        -:  725:    	v1 		: Float_Vector := (x, -x, x);
        -:  726:    	v2 		: Float_Vector := (y, y, y);
        1:  727:    	result	: Float := Float'First;
        1:  728:    	testres : Float := 2.0;
        -:  729:  begin  -- test case
        -:  730:    begin  -- test part
        1:  731:      testres := Vectors."*"(v1,v2);
        1:  732:      Driver_Internals.Set_Path ("=>");
        -:  733:    exception
    #####:  734:      when E: others =>
    #####:  735:        Driver_Internals.Set_Path (Ada.Exceptions.Exception_Name (E));
        -:  736:    end;  -- test part
        2:  737:    begin  -- result part
        1:  738:      if Driver_Internals.Path_Was ("=>") then
        1:  739:        if testres = result
        -:  740:        then
        1:  741:          Driver_Internals.Test_Case_Passed := True;
        1:  742:          Put_Line ("(15)  pass.");
        -:  743:        else
    #####:  744:          Driver_Internals.Test_Case_Passed := False;
    #####:  745:          Driver_Internals.Fail_Result := True;
    #####:  746:          Put_Line ("(15)  VECTORS mulityply_scalar_product_test_2");
    #####:  747:          Put_Line ("           Script name:'vectors_test.ts'; Line:137 ");
    #####:  748:          Put_Line ("      ...FAIL.");
    #####:  749:          Put_Line ("         (" & "path `=>' was taken, but predicate is FALSE" & ")");
        -:  750:        end if;
        -:  751:      else
    #####:  752:        Driver_Internals.Test_Case_Passed := False;
    #####:  753:        Driver_Internals.Fail_Result := True;
    #####:  754:        Put_Line ("(15)  VECTORS mulityply_scalar_product_test_2");
    #####:  755:        Put_Line ("           Script name:'vectors_test.ts'; Line:137 ");
    #####:  756:        Put_Line ("      ...FAIL.");
    #####:  757:        Put_Line ("         (" & "path `" & Driver_Internals.Taken_Path & "' when `=>' was expected" & ")");
        -:  758:      end if;
        -:  759:    exception
    #####:  760:      when Driver_Internals.Program_Terminate =>
    #####:  761:        raise;
    #####:  762:      when E: others =>
    #####:  763:        Driver_Internals.Unexpected_Error := True;
    #####:  764:        Put_Line ("ERROR: exception " & Ada.Exceptions.Exception_Name (E) & " raised in result part of test case 15.");
    #####:  765:        raise Driver_Internals.Program_Terminate;
        1:  766:    end;  -- result part
        -:  767:  end;  -- test case
        -:  768:
        -:  769:  -- Test Case (16)   VECTORS mulityply_scalar_product_test_3
        -:  770:  declare
        1:  771:    x		: Float := Float'Last;
        1:  772:    	y		: Float := 1.0;
        -:  773:    	v1 		: Float_Vector := (x, -x, x);
        -:  774:    	v2 		: Float_Vector := (y, y, y);
        1:  775:    	result	: Float := Float'Last;
        1:  776:    	testres : Float := 2.0;
        -:  777:  begin  -- test case
        -:  778:    begin  -- test part
        1:  779:      testres := Vectors."*"(v1,v2);
        1:  780:      Driver_Internals.Set_Path ("=>");
        -:  781:    exception
    #####:  782:      when E: others =>
    #####:  783:        Driver_Internals.Set_Path (Ada.Exceptions.Exception_Name (E));
        -:  784:    end;  -- test part
        2:  785:    begin  -- result part
        1:  786:      if Driver_Internals.Path_Was ("=>") then
        1:  787:        if testres = result
        -:  788:        then
        1:  789:          Driver_Internals.Test_Case_Passed := True;
        1:  790:          Put_Line ("(16)  pass.");
        -:  791:        else
    #####:  792:          Driver_Internals.Test_Case_Passed := False;
    #####:  793:          Driver_Internals.Fail_Result := True;
    #####:  794:          Put_Line ("(16)  VECTORS mulityply_scalar_product_test_3");
    #####:  795:          Put_Line ("           Script name:'vectors_test.ts'; Line:147 ");
    #####:  796:          Put_Line ("      ...FAIL.");
    #####:  797:          Put_Line ("         (" & "path `=>' was taken, but predicate is FALSE" & ")");
        -:  798:        end if;
        -:  799:      else
    #####:  800:        Driver_Internals.Test_Case_Passed := False;
    #####:  801:        Driver_Internals.Fail_Result := True;
    #####:  802:        Put_Line ("(16)  VECTORS mulityply_scalar_product_test_3");
    #####:  803:        Put_Line ("           Script name:'vectors_test.ts'; Line:147 ");
    #####:  804:        Put_Line ("      ...FAIL.");
    #####:  805:        Put_Line ("         (" & "path `" & Driver_Internals.Taken_Path & "' when `=>' was expected" & ")");
        -:  806:      end if;
        -:  807:    exception
    #####:  808:      when Driver_Internals.Program_Terminate =>
    #####:  809:        raise;
    #####:  810:      when E: others =>
    #####:  811:        Driver_Internals.Unexpected_Error := True;
    #####:  812:        Put_Line ("ERROR: exception " & Ada.Exceptions.Exception_Name (E) & " raised in result part of test case 16.");
    #####:  813:        raise Driver_Internals.Program_Terminate;
        1:  814:    end;  -- result part
        -:  815:  end;  -- test case
        -:  816:
        -:  817:  -- Test Case (17)   VECTORS verify_put_procedure_0
        -:  818:  declare
        -:  819:    v1		: Float_Vector := (1.0, 2.0, 3.0);
        -:  820:    	Result	: String := "( 1.0,  2.0,  3.0)";
        1:  821:    	Line	: String := "( 1.0,  2.0,  8.0)";
        -:  822:  begin  -- test case
        -:  823:    begin  -- test part
        1:  824:      Redirect_Stdout("out.txt");
        1:  825:      	Vectors.Vector_Put(v1);
        1:  826:      	Stdout;
        1:  827:      	Read_Line(Line, "out.txt");
        1:  828:      Driver_Internals.Set_Path ("=>");
        -:  829:    exception
    #####:  830:      when E: others =>
    #####:  831:        Driver_Internals.Set_Path (Ada.Exceptions.Exception_Name (E));
        -:  832:    end;  -- test part
        2:  833:    begin  -- result part
        1:  834:      if Driver_Internals.Path_Was ("=>") then
        1:  835:        if Line = Result
        -:  836:           	
        -:  837:        then
        1:  838:          Driver_Internals.Test_Case_Passed := True;
        1:  839:          Put_Line ("(17)  pass.");
        -:  840:        else
    #####:  841:          Driver_Internals.Test_Case_Passed := False;
    #####:  842:          Driver_Internals.Fail_Result := True;
    #####:  843:          Put_Line ("(17)  VECTORS verify_put_procedure_0");
    #####:  844:          Put_Line ("           Script name:'vectors_test.ts'; Line:160 ");
    #####:  845:          Put_Line ("      ...FAIL.");
    #####:  846:          Put_Line ("         (" & "path `=>' was taken, but predicate is FALSE" & ")");
        -:  847:        end if;
        -:  848:      else
    #####:  849:        Driver_Internals.Test_Case_Passed := False;
    #####:  850:        Driver_Internals.Fail_Result := True;
    #####:  851:        Put_Line ("(17)  VECTORS verify_put_procedure_0");
    #####:  852:        Put_Line ("           Script name:'vectors_test.ts'; Line:160 ");
    #####:  853:        Put_Line ("      ...FAIL.");
    #####:  854:        Put_Line ("         (" & "path `" & Driver_Internals.Taken_Path & "' when `=>' was expected" & ")");
        -:  855:      end if;
        -:  856:    exception
    #####:  857:      when Driver_Internals.Program_Terminate =>
    #####:  858:        raise;
    #####:  859:      when E: others =>
    #####:  860:        Driver_Internals.Unexpected_Error := True;
    #####:  861:        Put_Line ("ERROR: exception " & Ada.Exceptions.Exception_Name (E) & " raised in result part of test case 17.");
    #####:  862:        raise Driver_Internals.Program_Terminate;
        1:  863:    end;  -- result part
        -:  864:  end;  -- test case
        -:  865:
        -:  866:  -- Test Case (18)   VECTORS verify_put_procedure_1
        -:  867:  declare
        1:  868:    x 		: Float := Float'First;	
        -:  869:    	v1		: Float_Vector := (x, x, x);
        1:  870:    	Result	: String := "("&x'Img&","&x'Img&","&x'Img&")";
        1:  871:    	Line	: String := "( 1.0,  2.0,  8.0)";
        -:  872:  begin  -- test case
        -:  873:    begin  -- test part
        1:  874:      Redirect_Stdout("out.txt");
        1:  875:      	Vectors.Vector_Put(v1);
        1:  876:      	Stdout;
        1:  877:      	Read_Line(Line, "out.txt");
    #####:  878:      	Ada.Text_IO.Put_Line(Result);
    #####:  879:      	Ada.Text_IO.Put_Line(Line);
    #####:  880:      Driver_Internals.Set_Path ("=>");
        -:  881:    exception
        2:  882:      when E: others =>
        2:  883:        Driver_Internals.Set_Path (Ada.Exceptions.Exception_Name (E));
        -:  884:    end;  -- test part
        2:  885:    begin  -- result part
        1:  886:      if Driver_Internals.Path_Was ("=>") then
    #####:  887:        if Line = Result
        -:  888:        then
    #####:  889:          Driver_Internals.Test_Case_Passed := True;
    #####:  890:          Put_Line ("(18)  pass.");
        -:  891:        else
    #####:  892:          Driver_Internals.Test_Case_Passed := False;
    #####:  893:          Driver_Internals.Fail_Result := True;
    #####:  894:          Put_Line ("(18)  VECTORS verify_put_procedure_1");
    #####:  895:          Put_Line ("           Script name:'vectors_test.ts'; Line:170 ");
    #####:  896:          Put_Line ("      ...FAIL.");
    #####:  897:          Put_Line ("         (" & "path `=>' was taken, but predicate is FALSE" & ")");
        -:  898:        end if;
        -:  899:      else
        1:  900:        Driver_Internals.Test_Case_Passed := False;
        1:  901:        Driver_Internals.Fail_Result := True;
        1:  902:        Put_Line ("(18)  VECTORS verify_put_procedure_1");
        1:  903:        Put_Line ("           Script name:'vectors_test.ts'; Line:170 ");
        1:  904:        Put_Line ("      ...FAIL.");
        1:  905:        Put_Line ("         (" & "path `" & Driver_Internals.Taken_Path & "' when `=>' was expected" & ")");
        -:  906:      end if;
        -:  907:    exception
    #####:  908:      when Driver_Internals.Program_Terminate =>
    #####:  909:        raise;
    #####:  910:      when E: others =>
    #####:  911:        Driver_Internals.Unexpected_Error := True;
    #####:  912:        Put_Line ("ERROR: exception " & Ada.Exceptions.Exception_Name (E) & " raised in result part of test case 18.");
    #####:  913:        raise Driver_Internals.Program_Terminate;
        1:  914:    end;  -- result part
        -:  915:  end;  -- test case
        -:  916:
        -:  917:  --  End of test cases
        1:  918:  New_Line;
        1:  919:  Put ("Script name 'vectors_test.ts'");
        1:  920:  Put ("; total test result: ");
        1:  921:  if Driver_Internals.Fail_Result then
        1:  922:    Put ("FAIL");
        1:  923:    Driver_Internals.Status := 1;
        -:  924:  else
    #####:  925:    Put ("pass");
    #####:  926:    Driver_Internals.Status := 0;
        -:  927:  end if;
        1:  928:  Put_Line (".");
        1:  929:  New_Line;
        1:  930:  Ada.Command_Line.Set_Exit_Status (Driver_Internals.Status);
        -:  931:
        -:  932:exception
    #####:  933:  when Driver_Internals.Program_Terminate =>
    #####:  934:    New_Line;
    #####:  935:    Put ("Total test result: ");
    #####:  936:    if Driver_Internals.Fail_Result then
    #####:  937:      Put ("FAIL");
    #####:  938:      Driver_Internals.Status := 1;
        -:  939:    else
    #####:  940:      Put ("UNDEFINED");
    #####:  941:      Driver_Internals.Status := -1;
        -:  942:    end if;
    #####:  943:    if Driver_Internals.Unexpected_Error then
    #####:  944:      Put_Line (",");
    #####:  945:      Put_Line ("        there were one or more errors outside of test cases.");
    #####:  946:      Driver_Internals.Status := -1;
        -:  947:    else
    #####:  948:      Put_Line (".");
        -:  949:    end if;
    #####:  950:    New_Line;
    #####:  951:    Ada.Command_Line.Set_Exit_Status (Driver_Internals.Status);
    #####:  952:  when E: others =>
    #####:  953:    New_Line;
    #####:  954:    Put_Line ("Unexpected exception " & Ada.Exceptions.Exception_Name (E) & " propagating out of driver.");
    #####:  955:    Put_Line ("Results are undefined.");
    #####:  956:    Driver_Internals.Status := -1;
    #####:  957:    Ada.Command_Line.Set_Exit_Status (Driver_Internals.Status);
        -:  958:
        1:  959:end vectors_test;
